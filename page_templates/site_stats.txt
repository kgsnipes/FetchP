<html>
<head>


<meta http-equiv="refresh" content="10">
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css">



<title>Fetch - Site Monitoring Tool</title>
	<style>
		table thead tr td
		{
			font-weight:bold;
		}
		label.bold
		{
			font-weight:bold;
		}
		.error_logs
		{
			max-height:400px;
			overflow:auto;
		}
	</style>
	
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>
	
</head>
<body>
	<div class="container">
		<div class="col-md-12 col-lg-12 col-xs-12 col-sm-12">
		<h1>Fetch - Site Monitoring Statistics</h1>
		<h3>Statistics so far..</h3>
		
		{% for stat in stats %}
		<div class="col-md-7 col-lg-7 col-xs-7 col-sm-7">
			<table class="table table-striped  table-condensed table-hover">
			<thead>
				<tr>
					<td>Site URL : {{stat.uri}}</td>
					<td></td>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>Polled </td><td>{{stat.pollcount}} times</td>
				</tr>
				<tr>
					<td>Success Percentage </td><td><label class="bold">{{stat.successpercentage}} %</label></td>
				</tr>
				<tr>
					<td>Failure Percentage </td><td><label class="bold">{{stat.errorpercentage}} % </label></td>
				</tr>
				<tr>
					<td>Latest Failure </td><td>  {{stat.lastfailurepoint}} </td>
				</tr>
				<tr>
					<td>Latest Failure Message </td><td> {{stat.lasterrormessage}} </td>
				</tr>
				<tr>
					<td>Average latency </td><td>{{stat.averagelatency}} Seconds</td>
				</tr>
				{% if stat.errorlogs is defined %}
					<tr>
						<td colspan="2">
						<label class="bold">Error Logs: </label>
								<ul class="error_logs">
									{% for err in stat.errorlogs %}
										<li><label class="bold">{{err.time}} - {{err.msg}} </label</li>
									{% endfor %}
								</ul>						
						</td>
					</tr>
				{% endif %}
			<tbody>	
			</table>
			</div>
			<div class="col-md-5 col-lg-5 col-xs-5 col-sm-5">
				<div id="chartRender{{loop.index}}"></div>
			</div>
			<div class="col-md-12 col-lg-12 col-xs-12 col-sm-12">
				<div id="chartRenderLine{{loop.index}}"></div>
			</div>
		{% endfor %}
	</div>
	
	
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
	<!-- Latest compiled and minified JavaScript -->
	<script src="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
	<script>
		var allChartTables=[];
		var allLineTables=[];
		function drawChart()
		{
			$.each(allChartTables,function(k,v){
			
				v();
			});
			
			$.each(allLineTables,function(k,v){
			
				v();
			});
		}
		
		
		 google.load('visualization', '1.0', {'packages':['corechart']});

	      // Set a callback to run when the Google Visualization API is loaded.
	      google.setOnLoadCallback(drawChart);
      
      
	</script>
	<script>
	{% for stat in stats %}
	
			allChartTables.push(function(){
			
			var data = new google.visualization.DataTable();
	        data.addColumn('string', 'Hits/Misses');
	        data.addColumn('number', 'Percentage');
	      
	        data.addRows([
	          ['Success', {{stat.successpercentage}}],
	          ['Failure',{{stat.errorpercentage}}],
	     
	        ]);
	
	        // Set chart options
	        var options = {'title':'Hits/Misses',
	                       'width':400,
	                       'height':300};
	
	        // Instantiate and draw our chart, passing in some options.
	        var chart = new google.visualization.PieChart(document.getElementById("chartRender{{loop.index}}"));
	        chart.draw(data, options);
			
			});
			
			
			{% if stat.errorlogs is defined %}
					
					allLineTables.push(function(){
			
			var data = new google.visualization.DataTable();
	        data.addColumn('string', 'Time');
	        data.addColumn('number', 'Seconds');
	      
	       data.addRows([
	      {% for err in stat.latencylogs %}
			['{{err.date}}', {{err.latency}}],
		  {% endfor %}
	       ['',{{stat.averagelatency}}]
	        ]);
	
	        // Set chart options
	        var options = {'title':'Latency',
	                       'width':900,
	                       'height':500};
	
	        // Instantiate and draw our chart, passing in some options.
	        var chart = new google.visualization.LineChart(document.getElementById("chartRenderLine{{loop.index}}"));
	        chart.draw(data, options);
			
			});
					
								
				
			{% endif %}
			
					
		{% endfor %}
	</script>
</body>
</html>